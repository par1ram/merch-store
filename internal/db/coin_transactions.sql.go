// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: coin_transactions.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createCoinTransactionPurchase = `-- name: CreateCoinTransactionPurchase :exec
INSERT INTO coin_transactions (transaction_type, from_employee_id, merch_id, amount)
VALUES ('purchase', $1, $2, $3)
`

type CreateCoinTransactionPurchaseParams struct {
	FromEmployeeID int32
	MerchID        pgtype.Int4
	Amount         int32
}

// ----------------------------------------------------------
// CreateCoinTransactionPurchase вставляет запись о покупке мерча.
// $1 - id сотрудника (покупателя), $2 - id мерча, $3 - сумма (обычно равна цене товара).
func (q *Queries) CreateCoinTransactionPurchase(ctx context.Context, arg CreateCoinTransactionPurchaseParams) error {
	_, err := q.db.Exec(ctx, createCoinTransactionPurchase, arg.FromEmployeeID, arg.MerchID, arg.Amount)
	return err
}

const createCoinTransactionTransfer = `-- name: CreateCoinTransactionTransfer :exec
INSERT INTO coin_transactions (transaction_type, from_employee_id, to_employee_id, amount)
VALUES ('transfer', $1, $2, $3)
`

type CreateCoinTransactionTransferParams struct {
	FromEmployeeID int32
	ToEmployeeID   pgtype.Int4
	Amount         int32
}

// CreateCoinTransactionTransfer вставляет запись о переводе монет между сотрудниками.
// $1 - id отправителя, $2 - id получателя, $3 - сумма перевода.
func (q *Queries) CreateCoinTransactionTransfer(ctx context.Context, arg CreateCoinTransactionTransferParams) error {
	_, err := q.db.Exec(ctx, createCoinTransactionTransfer, arg.FromEmployeeID, arg.ToEmployeeID, arg.Amount)
	return err
}
