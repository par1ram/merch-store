// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: merch.sql

package db

import (
	"context"
)

const getMerchByName = `-- name: GetMerchByName :one
SELECT 
  id,
  name,
  price
FROM merch
WHERE name = $1
`

// GetMerchByName возвращает информацию о товаре по его названию.
func (q *Queries) GetMerchByName(ctx context.Context, name string) (Merch, error) {
	row := q.db.QueryRow(ctx, getMerchByName, name)
	var i Merch
	err := row.Scan(&i.ID, &i.Name, &i.Price)
	return i, err
}

const listMerch = `-- name: ListMerch :many
SELECT 
  id,
  name,
  price
FROM merch
ORDER BY name
`

// ----------------------------------------------------------
// ListMerch возвращает список всех товаров из мерча.
func (q *Queries) ListMerch(ctx context.Context) ([]Merch, error) {
	rows, err := q.db.Query(ctx, listMerch)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Merch
	for rows.Next() {
		var i Merch
		if err := rows.Scan(&i.ID, &i.Name, &i.Price); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
